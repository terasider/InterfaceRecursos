[
  {
    "title": "Inicio",
    "content": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>BlockMind</title>"
  },
  {
    "title": "",
    "content": " <style>\n    :root {\n      --bg: #121212;\n      --text: #f0f0f0;\n      --accent-blue: #3399ff;\n      --accent-red: #ff4f4f;\n      --border: #333;\n      --highlight: #1e1e1e;\n    }\n    * { box-sizing: border-box; }\n    body, html {\n      margin: 0; padding: 0; height: 100vh;\n      background: var(--bg); color: var(--\n\ntext);\n      font-family: 'Segoe UI', sans-serif;\n      display: flex; flex-direction: \n\ncolumn;\n    }\n    header {\n      padding: 12px 20px; background: var\n\n(--highlight);\n      font-size: 22px; font-weight: bold;\n      color: var(--accent-blue); border-\n\nbottom: 2px solid var(--border);\n    }\n    .title {\n      display: flex; align-items: center; \n\ngap: 10px;\n    }\n    .title img { width: 32px; height: 32px; \n\n}\n    .lang-select {\n      display: flex; align-items: center; \n\ngap: 8px;\n      padding: 10px 20px; background: var\n\n(--highlight);\n      border-bottom: 1px solid var(--\n\nborder);\n    }\n    .lang-select select, .lang-select input \n\n{\n      padding: 6px 10px; font-size: 14px;\n      background: #222; color: var(--text);\n      border: 1px solid var(--border); \n\nborder-radius: 4px;\n      outline: none;\n    }\n    .lang-select img {\n      width: 20px; height: 20px;\n      vertical-align: middle;\n    }\n    main { flex: 1; display: flex; \n\noverflow: hidden; }\n    #left { width: 50%; padding: 10px; \n\noverflow: hidden; background: var(--bg); \n\ndisplay: flex; flex-direction: column; }\n    .controls {\n      position: sticky; top: 0; z-index: \n\n100;\n      display: flex; gap: 10px; flex-wrap: \n\nwrap;\n      padding: 10px; background: var(--\n\nhighlight);\n      border: 2px solid var(--accent-blue); \n\nborder-radius: 6px;\n    }\n    .controls button {\n      padding: 6px 10px; background: var\n\n(--accent-blue);\n      color: white; border: none; border-\n\nradius: 4px;\n      cursor: pointer; transition: \n\nbackground 0.3s;\n    }\n    .controls button:hover { background: \n\nvar(--accent-red); }\n    #boxes { overflow-y: auto; flex: 1; \n\npadding-right: 4px; }\n    .code-box { position: relative; margin: \n\n12px 0; background: var(--highlight);\n      border: 2px solid var(--accent-blue); \n\nborder-radius: 6px;\n      box-shadow: 0 0 8px var(--accent-\n\nblue); transition: all 0.3s;\n    }\n    .code-box:hover {\n      border-color: var(--accent-red);\n      box-shadow: 0 0 12px var(--accent-\n\nred);\n    }\n    .block-title {\n      display: flex; align-items: center;\n      padding: 6px 10px; background: #222;\n      border-bottom: 1px solid var(--\n\nborder);\n    }\n    .block-title input {\n      flex: 1; background: transparent; \n\nborder: none;\n      color: var(--accent-blue); font-size: \n\n14px;\n      outline: none; font-family: \n\nmonospace;\n    }\n    .toolbar {\n      position: absolute; top: 6px; right: \n\n6px;\n      display: flex; gap: 4px; z-index: 10;\n    }\n    .toolbar button {\n      background: var(--accent-blue); \n\nborder: none;\n      color: white; padding: 2px 6px; \n\nborder-radius: 3px;\n      cursor: pointer; transition: \n\nbackground 0.3s;\n    }\n    .toolbar button:hover { background: \n\nvar(--accent-red); }\n    .code-box textarea {\n      width: 100%; min-height: 150px; \n\npadding: 12px;\n      background: #121212; color: var(--\n\ntext);\n      border: none; font-family: monospace; \n\nfont-size: 16px;\n      border-radius: 0 0 6px 6px; outline: \n\nnone;\n      resize: vertical;\n    }\n    .code-box textarea::placeholder { \n\ncolor: #777; }\n    #right { flex: 1; background: #1b1b1b; \n\nborder-left: 2px solid var(--border); \n\noverflow: hidden; }\n    #preview { width: 100%; height: 100%; \n\nborder: none; background: white; }\n    footer {\n      padding: 10px 20px; background: var\n\n(--highlight);\n      border-top: 2px solid var(--border); \n\nfont-size: 14px;\n      color: var(--text);\n    }\n    footer a { color: var(--accent-red); \n\ntext-decoration: none; }\n    footer a:hover { text-decoration: \n\nunderline; }\n    #file-input { display: none; }\n  </style>\n</head>"
  },
  {
    "title": "",
    "content": "<body>\n  <header><div class=\"title\"><img \n\nsrc=\"https://cdn-icons-\n\npng.flaticon.com/512/4335/4335007.png\" \n\nalt=\"BlockMind\">BlockMind</div></header>\n\n<div class=\"lang-select\">\n  <label for=\"filename\">Nome do \n\narquivo:</label>\n  <input type=\"text\" id=\"filename\" \n\nplaceholder=\"blockmind\" />\n  <label for=\"ext\" style=\"margin-left: \n\n12px;\">Extens√£o do arquivo:</label>\n  <input type=\"text\" id=\"ext\" \n\nplaceholder=\".html\" />\n</div>\n\n\n  <main>\n    <div id=\"left\">\n      <div class=\"controls\">\n        <button id=\"add-btn\">+ \n\nBloco</button>\n        <button id=\"import-json-\n\nbtn\">Importar JSON</button>\n        <button id=\"export-json-\n\nbtn\">Exportar JSON</button>\n        <button id=\"export-\n\nbtn\">Exportar/Copiar Arquivo</button>\n        <input type=\"file\" id=\"file-input\" \n\naccept=\".json\" />\n      </div>\n      <div id=\"boxes\"></div>\n    </div>\n    <div id=\"right\"><iframe \n\nid=\"preview\"></iframe></div>\n  </main>\n\n  <footer>\n    Desenvolvido por Jos√© Roberto \n\nFriederich.<br/>\n    Contato:\n    <a \n\nhref=\"mailto:joserobertofriederich@gmail.co\n\nm\">joserobertofriederich@gmail.com</a><br/>\n    √öltima atualiza√ß√£o: 13 de julho de 2025 \n\n16:39 PM Domingo\n  </footer>\n"
  },
  {
    "title": "",
    "content": "\n  <script \n\nsrc=\"https://cdn.jsdelivr.net/npm/sortablej\n\ns@latest/Sortable.min.js\"></script>\n  <script>\n   const state = [];\nconst boxesEl = document.getElementById\n\n('boxes');\nconst preview = document.getElementById\n\n('preview');\nconst fileInput = document.getElementById\n\n('file-input');\nconst extInput = document.getElementById\n\n('ext');\n\nfunction renderBoxes() {\n  boxesEl.innerHTML = '';\n  state.forEach((b, i) => {\n    const box = document.createElement\n\n('div');\n    box.className = 'code-box';\n    box.dataset.index = i;\n\n    const titleBar = \n\ndocument.createElement('div');\n    titleBar.className = 'block-title';\n    const tit = document.createElement\n\n('input');\n    tit.type = 'text';\n    tit.value = b.title || '';\n    tit.placeholder = 'T√≠tulo do bloco';\n    tit.addEventListener('input', () => \n\nb.title = tit.value);\n    titleBar.appendChild(tit);\n\n    const toolbar = document.createElement\n\n('div');\n    toolbar.className = 'toolbar';\n\n    const ta = document.createElement\n\n('textarea');\n    ta.value = b.content;\n    ta.placeholder = 'Digite seu c√≥digo \n\naqui';\n    ta.addEventListener('input', () => {\n      b.content = ta.value;\n      updatePreview();\n    });\n\n    const pasteBtn = \n\ndocument.createElement('button');\n    pasteBtn.textContent = 'üìã';\n    pasteBtn.title = 'Colar do clipboard';\n    pasteBtn.onclick = async () => {\n      try {\n        const text = await \n\nnavigator.clipboard.readText();\n        ta.value = text;\n        b.content = text;\n        updatePreview();\n      } catch {\n        alert('N√£o foi poss√≠vel colar.');\n      }\n    };\n\n    const delBtn = document.createElement\n\n('button');\n    delBtn.textContent = 'üóëÔ∏è';\n    delBtn.title = 'Remover bloco';\n    delBtn.onclick = () => {\n      state.splice(i, 1);\n      renderBoxes();\n    };\n\n    toolbar.append(pasteBtn, delBtn);\n    box.append(titleBar, toolbar, ta);\n    boxesEl.appendChild(box);\n  });\n  updatePreview();\n}\n\nfunction updatePreview() {\n  const code = state.map(b => \n\nb.content).join('\\n\\n');\n  preview.srcdoc = '<pre style=\"white-\n\nspace: pre-wrap; color: #eee; \n\nbackground:#121212; padding:10px;\">' + \n\ncode.replace(/</g, '&lt;') + '</pre>';\n}\n\nfunction addBox() {\n  state.push({ title: '', content: '' });\n  renderBoxes();\n}\n\nfunction exportJSON() {\n  const j = JSON.stringify(state, null, 2);\n  const blob = new Blob([j], { type: \n\n'application/json' });\n  const a = document.createElement('a');\n  a.href = URL.createObjectURL(blob);\n  a.download = 'blockmind.json';\n  a.click();\n}\n\nfunction importJSON(txt) {\n  try {\n    const arr = JSON.parse(txt);\n    if (!Array.isArray(arr)) throw 'Formato \n\ninv√°lido';\n    state.length = 0;\n    arr.forEach(o => state.push({ title: \n\no.title || '', content: o.content || '' \n\n}));\n    renderBoxes();\n  } catch (e) {\n    alert('JSON inv√°lido');\n  }\n}\n\nfunction exportFile() {\n  const code = state.map(b => \n\nb.content).join('\\n\\n');\n  let filename = document.getElementById\n\n('filename').value.trim() || 'blockmind';\n  let ext = extInput.value.trim();\n\n  if (ext && !ext.startsWith('.')) {\n    ext = '.' + ext;\n  } else if (!ext) {\n    ext = '.html';\n  }\n\n  const blob = new Blob([code], { type: \n\n'text/plain' });\n  const a = document.createElement('a');\n  a.href = URL.createObjectURL(blob);\n  a.download = filename + ext;\n  a.click();\n\n  navigator.clipboard.writeText(code)\n    .then(() => alert(`Arquivo \"${filename \n\n+ ext}\" exportado e c√≥digo copiado!`))\n    .catch(() => alert(`Arquivo \"${filename \n\n+ ext}\" exportado, mas n√£o foi poss√≠vel \n\ncopiar o c√≥digo.`));\n}\n\n\ndocument.getElementById('add-btn').onclick \n\n= addBox;\ndocument.getElementById('export-json-\n\nbtn').onclick = exportJSON;\ndocument.getElementById('import-json-\n\nbtn').onclick = () => fileInput.click();\ndocument.getElementById('export-\n\nbtn').onclick = exportFile;\n\nfileInput.addEventListener('change', e => {\n  const f = e.target.files[0];\n  if (!f) return;\n  const reader = new FileReader();\n  reader.onload = ev => importJSON\n\n(ev.target.result);\n  reader.readAsText(f);\n  e.target.value = '';\n});\n\nSortable.create(boxesEl, {\n  animation: 150,\n  handle: '.block-title',\n  onEnd: (evt) => {\n    const [m] = state.splice(evt.oldIndex, \n\n1);\n    state.splice(evt.newIndex, 0, m);\n    renderBoxes();\n  }\n});\n\n// Cria 3 blocos iniciais\nfor (let i = 0; i < 3; i++) addBox();\n\n  </script>\n</body>\n</html>"
  }
]